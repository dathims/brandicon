import JSZip from 'jszip';
import { saveAs } from 'file-saver';
import { CHROME_ICON_SIZES, type IconSize } from './image-processor';

/**
 * Generate manifest.json snippet for Chrome extension icons
 */
export function generateManifestSnippet(iconFilenames?: {
	[key in IconSize]: string;
}): string {
	const defaultFilenames = CHROME_ICON_SIZES.reduce(
		(acc, size) => {
			acc[size] = `icon-${size}.png`;
			return acc;
		},
		{} as { [key in IconSize]: string }
	);

	const filenames = iconFilenames || defaultFilenames;

	const manifest = {
		name: 'Your Extension Name',
		version: '1.0.0',
		manifest_version: 3,
		description: 'Your extension description',
		icons: {
			'16': `icons/${filenames[16]}`,
			'32': `icons/${filenames[32]}`,
			'48': `icons/${filenames[48]}`,
			'128': `icons/${filenames[128]}`
		},
		action: {
			default_icon: {
				'16': `icons/${filenames[16]}`,
				'32': `icons/${filenames[32]}`,
				'48': `icons/${filenames[48]}`,
				'128': `icons/${filenames[128]}`
			}
		}
	};

	return JSON.stringify(manifest, null, 2);
}

/**
 * Export icons as individual files
 */
export async function exportIndividualIcons(icons: { [key in IconSize]: Blob }) {
	for (const [size, blob] of Object.entries(icons)) {
		saveAs(blob, `icon-${size}x${size}.png`);
	}
}

/**
 * Export all icons in a ZIP file with manifest snippet
 */
export async function exportAsZip(
	icons: { [key in IconSize]: Blob },
	options: {
		includeManifest?: boolean;
		projectName?: string;
	} = {}
) {
	const { includeManifest = true, projectName = 'extension-icons' } = options;

	const zip = new JSZip();
	const iconsFolder = zip.folder('icons');

	if (!iconsFolder) {
		throw new Error('Failed to create icons folder in ZIP');
	}

	// Add all icon sizes to the icons folder
	for (const size of CHROME_ICON_SIZES) {
		const blob = icons[size];
		iconsFolder.file(`icon-${size}.png`, blob);
	}

	// Add manifest.json snippet if requested
	if (includeManifest) {
		const manifestContent = generateManifestSnippet();
		zip.file('manifest-snippet.json', manifestContent);

		// Add a README
		const readme = `# Chrome Extension Icons

This package contains icons generated by BrandIcon for your Chrome extension.

## Files included:
${CHROME_ICON_SIZES.map((size) => `- icons/icon-${size}.png (${size}x${size}px)`).join('\n')}
- manifest-snippet.json (sample manifest.json configuration)

## How to use:

1. Copy the \`icons\` folder to your Chrome extension project
2. Add the icon paths to your \`manifest.json\` file (see manifest-snippet.json for example)
3. The icons are ready to use in your extension!

## Icon sizes:
- 16x16: Browser toolbar icon
- 32x32: Windows computer retina display
- 48x48: Extensions management page
- 128x128: Chrome Web Store listing

Generated with BrandIcon - https://brandicon.dev
`;
		zip.file('README.md', readme);
	}

	// Generate and download the ZIP
	const blob = await zip.generateAsync({ type: 'blob' });
	saveAs(blob, `${projectName}.zip`);
}

/**
 * Copy manifest snippet to clipboard
 */
export async function copyManifestToClipboard(): Promise<boolean> {
	try {
		const snippet = generateManifestSnippet();
		await navigator.clipboard.writeText(snippet);
		return true;
	} catch (error) {
		console.error('Failed to copy to clipboard:', error);
		return false;
	}
}
